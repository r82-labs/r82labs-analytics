name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run Ruff check
        run: poetry run ruff check
      
      - name: Run Pytest with coverage
        run: poetry run pytest --cov=r82labs_analytics --cov-report=term

      - name: Fail if coverage < 100%
        run: |
          coverage=$(poetry run coverage report | grep 'TOTAL' | awk '{print $4}' | tr -d '%')
          if [ "$coverage" -lt 100 ]; then
            echo "Test coverage is less than 100% ($coverage%)"
            exit 1
          fi
      - name: Create and push tag from version
        if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(poetry version -s)
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "v$version"
          git push origin "v$version"
