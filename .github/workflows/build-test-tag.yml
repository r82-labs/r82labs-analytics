name: Build, Test, and Tag

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run Ruff check
        run: poetry run ruff check
      
      - name: Run Pytest with coverage
        run: poetry run pytest --cov=r82labs_analytics --cov-report=term

      - name: Fail if coverage < 100%
        run: |
          coverage=$(poetry run coverage report | grep 'TOTAL' | awk '{print $4}' | tr -d '%')
          if [ "$coverage" -lt 100 ]; then
            echo "Test coverage is less than 100% ($coverage%)"
            exit 1
          fi
      - name: Create and push tag if version updated
        if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(poetry version -s)
          tag="v$version"
          git fetch --tags
          if git tag --list | grep -q "^$tag$"; then
            echo "Tag $tag already exists. Skipping tag creation."
            exit 0
          fi
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$tag"
          git push origin "$tag"
      - name: Get latest tag
        id: get_tag
        run: | 
          tag=$(git describe --tags --abbrev=0)
          echo "tag_name=$tag" >> $GITHUB_OUTPUT
      - name: Run poetry build
        run: poetry build
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         tag_name: ${{ steps.get_tag.outputs.tag_name }}
         release_name: Release ${{ steps.get_tag.outputs.tag_name }}
         body: |
           ## Release Notes
           This is the release for tag ${{ steps.get_tag.outputs.tag_name }}. See commit history for detailed changes.
         draft: false
         prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.zip
          asset_name: r82labs-analytics-${{ steps.get_tag.outputs.tag_name }}.zip
          asset_content_type: application/zip